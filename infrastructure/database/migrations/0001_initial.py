# Generated by Django 4.2.7 on 2025-06-18 13:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DESSUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('super_admin', 'Super Administrator'), ('user', 'User')], default='user', help_text='Rol del usuario en el sistema DESS', max_length=20)),
                ('full_name', models.CharField(help_text='Nombre completo del usuario', max_length=200)),
                ('assigned_solutions', models.TextField(default='[]', help_text='IDs de soluciones asignadas (JSON array)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario DESS',
                'verbose_name_plural': 'Usuarios DESS',
                'db_table': 'dess_users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nombre único de la solución', max_length=200, unique=True)),
                ('description', models.TextField(help_text='Descripción detallada de la solución')),
                ('repository_url', models.URLField(help_text='URL del repositorio Git')),
                ('status', models.CharField(choices=[('active', 'Activa'), ('inactive', 'Inactiva'), ('maintenance', 'En Mantenimiento'), ('error', 'Error')], default='inactive', help_text='Estado actual de la solución', max_length=20)),
                ('solution_type', models.CharField(choices=[('web_app', 'Aplicación Web'), ('api', 'API/Servicio'), ('desktop', 'Aplicación de Escritorio'), ('script', 'Script/Herramienta')], default='web_app', help_text='Tipo de aplicación', max_length=20)),
                ('access_url', models.URLField(blank=True, help_text='URL de acceso a la solución desplegada', null=True)),
                ('version', models.CharField(blank=True, help_text='Versión actual desplegada', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Solución',
                'verbose_name_plural': 'Soluciones',
                'db_table': 'dess_solutions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSolutionAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accessed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('solution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.solution')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Acceso a Solución',
                'verbose_name_plural': 'Accesos a Soluciones',
                'db_table': 'dess_user_solution_access',
            },
        ),
    ]
